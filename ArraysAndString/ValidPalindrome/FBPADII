Welcome to Facebook!

This is just a simple shared plaintext pad, with no execution capabilities.

When you know what language you would like to use for your interview,
simply choose it from the dropdown in the top bar.

Enjoy your interview!

Hello World!

racecar

/*
# Write a function that returns whether the given string, ignoring punctuation
# and capitalization, is a palindrome.
# An example of palindrome is:
#     "Race car!"
# A palindrome is a chunk of text that is the same backwards and forwards,
# again, ignoring punctuation and capitalization.
*/

// 2. left pointer = 0
// 3. right = n.lenght - 1

// input = !!
// left = 1;
   right = 1;

function isValidPalindrome(input) {
  // empty string ?

  let leftPointer = 0;
  let rightPointer = input.length - 1;

  while(leftPointer <= rightPointer) {
    if(!isValidCharacter(input[leftPointer]) {
      leftPointer++;
      continue;
    }

    if(!isValidCharacter(input[rightPointer]) {
      rightPointer--;
      continue;
    }

    if(input[leftPointer].toLowerCase() == input[rightPointer].toLowerCase()) {
      leftPointer++;
      rightPointer --;
    }
    else {
      return false;
    }

  }

  return true

}

function isValidCharacter(character) {

}






/*
Implement a function to merge 3 sorted integer arrays. The output should be another sorted integer array consisting of all integers from the 3 input arrays. There is an catch such that the input arrays may have duplicates, but the output array shouldn't have any duplicate.
*/
currentNumber;

output = [
  1,2,3,4,5,6,7,8
]

input = [
  [1,2,3], // one = 2
  [3,4,4,5], // two = 3
  [6,7,8], // three = 0,1,2
]

function mergeThreeArray(input) {
  const output = [];

  let a = 2;
  let b = 1;
  let c = 0;
  const arrayA = input[0]; // [1,2,3]
  const arrayB = input[1]; // [3,4,4,5]
  const arrayC = input [2]; // [6,7,8]

  let currentNumber; // This is what has just been added to the output.

  while(a < arrayA.length || b < arrayB.length || c < arrayC.length) {
    if(a <= arrayA.length -1 && arrayA[a] <= arrayB[b] && arrayA[a] < arrayC[c] && arrayA[a] != currentNumber ) { // Should be != or > ?
      currentNumber = arrayA[a]; // Add this to the output
      a++;
    }

    if(b <= arrayB.length -1  && arrayB[b] <= arrayA[a] && arrayB[b] < arrayC[c] && arrayB[b] != currentNumber ) { // Should be != or > ?
      currentNumber = arrayB[b]; // Add this to the output
      b++;
    }


    if(c <= arrayC.length -1 && arrayC[c] <= arrayA[a] && arrayC[c] < arrayB[b] && arrayC[c] != currentNumber ) { // Should be != or > ?
      currentNumber = arrayC[c]; // Add this to the output
      c++;
    }

    output.push(currentNumber)'
  }

  return output;

}
